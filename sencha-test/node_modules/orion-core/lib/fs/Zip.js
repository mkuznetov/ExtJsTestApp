"use strict";function _interopRequireDefault(a){return a&&a.__esModule?a:{"default":a}}var _promise=require("babel-runtime/core-js/promise"),_promise2=_interopRequireDefault(_promise),_classCallCheck2=require("babel-runtime/helpers/classCallCheck"),_classCallCheck3=_interopRequireDefault(_classCallCheck2),_createClass2=require("babel-runtime/helpers/createClass"),_createClass3=_interopRequireDefault(_createClass2),archiver=require("archiver"),fs=require("mz/fs"),path=require("path"),unzip=require("unzip2"),xfs=require("orion-core/lib/xfs"),File=require("orion-core/lib/fs/File"),Zip=function(){function a(){(0,_classCallCheck3["default"])(this,a)}return(0,_createClass3["default"])(a,null,[{key:"fromDir",value:function(a,b,c,d){return new _promise2["default"](function(e,f){var g,h;b||(b=path.normalize(a)+".zip"),xfs.exists(a).then(function(i){i?(g=fs.createWriteStream(b),h=archiver("zip"),g.on("close",function(){e({fileName:b,bytes:h.pointer()})}),h.on("error",function(a){f(a)}),h.pipe(g),h.bulk([{expand:!0,cwd:a,src:c||["**"],dest:d||path.basename(b,".zip")}]),h.finalize()):f("Cannot create zip file from directory. Directory does not exist: "+a)})})}},{key:"extract",value:function(a,b){return b||(b=new File(a).parent.path),new _promise2["default"](function(c,d){xfs.mkdir(b).then(function(){fs.createReadStream(a).pipe(unzip.Extract({path:b})).on("close",function(a){a?d(a):c()}).on("error",function(a){d(a)})},function(a){d(a)})})}}]),a}();module.exports=Zip;